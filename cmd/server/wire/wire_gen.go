// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/gin-gonic/gin"
	"github.com/go-nunu/nunu-layout/internal/handler"
	"github.com/go-nunu/nunu-layout/internal/middleware"
	"github.com/go-nunu/nunu-layout/internal/repository"
	"github.com/go-nunu/nunu-layout/internal/server"
	"github.com/go-nunu/nunu-layout/internal/service"
	"github.com/go-nunu/nunu-layout/pkg/db"
	"github.com/go-nunu/nunu-layout/pkg/log"
	"github.com/go-nunu/nunu-layout/pkg/sonyflake"
	"github.com/spf13/viper"
)

// Injectors from wire.go:

// wire.go 初始化模块
func NewApp(viperViper *viper.Viper, logger *log.Logger) (*gin.Engine, func(), error) {
	jwt := middleware.NewJwt(viperViper)
	sonyflakeSonyflake := sonyflake.NewSonyflake()
	gormDB := db.NewDB(viperViper)
	userRepository := repository.NewUserRepository(gormDB)
	userService := service.NewUserService(userRepository)
	userHandler := handler.NewUserHandler(logger, sonyflakeSonyflake, userService)
	engine := server.NewServerHTTP(logger, jwt, userHandler)
	return engine, func() {
	}, nil
}
